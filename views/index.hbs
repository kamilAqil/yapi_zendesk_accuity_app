
      
    
    <h1 class="pastbar">Today's Appointments</h1>
    <p id="apptToday"></p> 

    <h5 class="pastbar">Future Appointments</h5>
    <p id="apptFuture"></p>

    <h5 class="pastbar"> Past Appointments</h5>
    <p id="apptPast"></p>


    <script type="text/javascript" src="https://static.zdassets.com/zendesk_app_framework_sdk/2.0/zaf_sdk.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
        let res = null;
        var client = ZAFClient.init();
        let requesterOrganizationID = undefined
        let requesterOrganizationName = undefined
        //{ { !--get ticket requester name-- } }
        client.get('ticket.requester').then(function (data) {
            {{!-- console.log(`data from zaf client = ${JSON.stringify(data,null," ")}`) --}}
            {{!-- get requester name, email, organization name, and organization id --}}
            let requesterName = data['ticket.requester']['name'];
            let requesterEmail = data['ticket.requester']['email'];
            if(data['ticket.requester']['organizations']){
                console.log(`there are organizations`)
                 requesterOrganizationID = data['ticket.requester']['organizations'][0]['id'];
                 requesterOrganizationName = data['ticket.requester']['organizations'][0]['name']; 
            }           
            
            {{!-- re write the axios get method using the params object --}}
            //{ { !--send ticket requester name to server api-- } }
            
            axios.get('/acuityAPI',{
                params : {
                    requesterName : requesterName,
                    requesterEmail : requesterEmail,
                    requesterOrganizationID : requesterOrganizationID,
                    requesterEmail : requesterEmail
                }
            })
                .then(function (response) {
                         client.invoke('resize', {
                            width: '100%',
                            height: '500px'
                            });
                        // console.log(response.data);
                        x = "", y="", z=""; 
                        
                        //PAST APPOINTMENTS
                        if (response.data.pastAppointments) {     
                            for (let i in response.data.pastAppointments) {
                                const resPastAppt = response.data.pastAppointments[i]
                                var linkPast = response.data.pastAppointments[i].link
                                const boxColor = response.data.pastAppointments[i].color
                                if (resPastAppt.notes === ""){
                                    resPastAppt.notes = "no notes available"
                                }
                                x += "<p class = 'rowOne' style= 'padding:0; margin:0'>" + resPastAppt.date + "</p>";
                                x += `<div class='box' style="background:${boxColor}"></div><p class = 'rowTwo'style= ' margin:0'>` + resPastAppt.time  + " " + resPastAppt.name + "</p>";
                                x += "<p class = 'rowThree' style= 'padding:0; margin:1pt '>" + resPastAppt.type + " | " + resPastAppt.assignedTo + " | " + resPastAppt.time + " to " + resPastAppt.endTime + "</p>";
                                x += "<p class = 'notes' style= 'padding:0; margin:5pt '>" + resPastAppt.notes + "</p>";
                                x += `<button class = "button" onClick="pastLink('${linkPast}')" >More Info</button>`
                                //console.log(response.data.pastAppointments[i].link)
                            }   
                        }
                        //FUTURE APPOINTMENTS
                        if (response.data.futureAppointments) {
                            for (let i in response.data.futureAppointments) {
                                const resFutureAppt = response.data.futureAppointments[i]
                                var linkFuture = response.data.futureAppointments[i].link
                                const boxColor = response.data.futureAppointments[i].color
                                if (resFutureAppt.notes === ""){
                                    resFutureAppt.notes = "No notes available"
                                }
                                y += "<p class = 'rowOne' style= 'padding:0; margin:0'>" + resFutureAppt.date + "</p>";
                                y += `<div class='box' style="background:${boxColor}"></div><p class = 'rowTwo'style= ' margin:0'>` + resFutureAppt.time  + " " + resFutureAppt.name + "</p>";
                                y += "<p class = 'rowThree' style= 'padding:0; margin:1pt '>" + resFutureAppt.type + " | " + resFutureAppt.assignedTo + " | " + resFutureAppt.time  + " to " + resFutureAppt.endTime + "</p>";
                                y += "<p class = 'notes' style= 'padding:0; margin:5pt '>" + resFutureAppt.notes + "</p>"; 
                                y += `<button class = "button" onClick="futureLink('${linkFuture}')" >More Info</button>`
                            }
                        }
                        //TODAY'S APPOINTMENTS
                        if (response.data.todaysAppointments) {
                            for (let i in response.data.todaysAppointments) {
                                const resTodayAppt = response.data.todaysAppointments[i]
                                var linkToday = response.data.todaysAppointments[i].link
                                const boxColor = response.data.todaysAppointments[i].color
                                if (resTodayAppt.notes === ""){
                                    resTodayAppt.notes = "no notes available"
                                }
                                z += "<p class = 'rowOne' style= 'padding:0; margin:0'>" + resTodayAppt.date + "</p>";
                                z += `<div class='box' style="background:${boxColor}"></div><p class = 'rowTwo'style= ' margin:0'>` + resTodayAppt.time  + " " + resTodayAppt.name + "</p>";
                                z += "<p class = 'rowThree' style= 'padding:0; margin:1pt '>" + resTodayAppt.type + " | " + resTodayAppt.assignedTo + " | " + resTodayAppt.time + " to " + resTodayAppt.endTime + "</p>";
                                z += "<p class = 'notes' style= 'padding:0; margin:5pt '>" + resTodayAppt.notes + "</p>";
                                z += `<button class = "button" onClick="presentLink('${linkToday}')" >More Info</button>`
                            }
                        }
                        //If no appointments, display this
                        x.length === 0 ? x = 'No Past Appointments' : null;
                        y.length === 0 ? y = 'No Future Appointments' : null;
                        z.length === 0 ? z = 'No Appointments Today' : null;
                        
                        //Display the data in HTML
                        document.getElementById("apptPast").innerHTML = x;
                        document.getElementById("apptFuture").innerHTML = y;
                        document.getElementById("apptToday").innerHTML = z;
        });
                })
                .catch(function (error) {
                    console.log(error);
                });
        
</script>